// Generated by view binder compiler. Do not edit!
package com.example.bevproject.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.drawerlayout.widget.DrawerLayout;
import androidx.viewbinding.ViewBinding;
import com.example.bevproject.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityArticleBinding implements ViewBinding {
  @NonNull
  private final DrawerLayout rootView;

  @NonNull
  public final Button btnItemAuthor;

  @NonNull
  public final DrawerLayout homeLayout;

  @NonNull
  public final BackToolbarBinding include;

  @NonNull
  public final TextView itemCateg;

  @NonNull
  public final TextView itemContent;

  @NonNull
  public final ImageButton itemCopy;

  @NonNull
  public final ImageView itemImage;

  @NonNull
  public final ImageButton itemPin;

  @NonNull
  public final TextView itemTitle;

  private ActivityArticleBinding(@NonNull DrawerLayout rootView, @NonNull Button btnItemAuthor,
      @NonNull DrawerLayout homeLayout, @NonNull BackToolbarBinding include,
      @NonNull TextView itemCateg, @NonNull TextView itemContent, @NonNull ImageButton itemCopy,
      @NonNull ImageView itemImage, @NonNull ImageButton itemPin, @NonNull TextView itemTitle) {
    this.rootView = rootView;
    this.btnItemAuthor = btnItemAuthor;
    this.homeLayout = homeLayout;
    this.include = include;
    this.itemCateg = itemCateg;
    this.itemContent = itemContent;
    this.itemCopy = itemCopy;
    this.itemImage = itemImage;
    this.itemPin = itemPin;
    this.itemTitle = itemTitle;
  }

  @Override
  @NonNull
  public DrawerLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityArticleBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityArticleBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_article, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityArticleBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnItemAuthor;
      Button btnItemAuthor = rootView.findViewById(id);
      if (btnItemAuthor == null) {
        break missingId;
      }

      DrawerLayout homeLayout = (DrawerLayout) rootView;

      id = R.id.include;
      View include = rootView.findViewById(id);
      if (include == null) {
        break missingId;
      }
      BackToolbarBinding binding_include = BackToolbarBinding.bind(include);

      id = R.id.itemCateg;
      TextView itemCateg = rootView.findViewById(id);
      if (itemCateg == null) {
        break missingId;
      }

      id = R.id.itemContent;
      TextView itemContent = rootView.findViewById(id);
      if (itemContent == null) {
        break missingId;
      }

      id = R.id.itemCopy;
      ImageButton itemCopy = rootView.findViewById(id);
      if (itemCopy == null) {
        break missingId;
      }

      id = R.id.itemImage;
      ImageView itemImage = rootView.findViewById(id);
      if (itemImage == null) {
        break missingId;
      }

      id = R.id.itemPin;
      ImageButton itemPin = rootView.findViewById(id);
      if (itemPin == null) {
        break missingId;
      }

      id = R.id.itemTitle;
      TextView itemTitle = rootView.findViewById(id);
      if (itemTitle == null) {
        break missingId;
      }

      return new ActivityArticleBinding((DrawerLayout) rootView, btnItemAuthor, homeLayout,
          binding_include, itemCateg, itemContent, itemCopy, itemImage, itemPin, itemTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
